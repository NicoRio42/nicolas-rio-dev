---
import type { InferEntrySchema } from "astro:content";
import type { Locale } from "@models/locale";
import ExpandableArticle from "./ExpandableArticle.astro";
import labels from "@content/_labels.json";

export interface Props {
  locale: Locale;
  data: InferEntrySchema<"experiences">;
}

const { data, locale } = Astro.props;

const formatter = new Intl.DateTimeFormat(locale, { dateStyle: "short" });
---

<ExpandableArticle locale={locale}>
  <h2 class="heading" text="4.5" font-bold>
    {data.title}
  </h2>

  <p flex items-center gap-2 text="[#404040] 3" mt-2>
    <i i-carbon-calendar inline-block h-5 w-5></i>

    <span>
      {labels.experiences.from[locale]}

      <time datetime={data.from.toISOString()}
        >{formatter.format(data.from)}</time
      >

      {
        data.to !== undefined && (
          <>
            {labels.experiences.to[locale]}

            <time datetime={data.to.toISOString()}>
              {formatter.format(data.to)}
            </time>
          </>
        )
      }
    </span>
  </p>

  <p flex items-center gap-2 text="[#404040] 3" mt-1>
    <i i-carbon-building inline-block h-5 w-5></i>

    {data.employerOrClient}
  </p>

  <div class="prose prose-neutral" max-w-full text-justify>
    <slot />
  </div>

  <ul flex="~ wrap" gap-2>
    {
      data.skills.map((skill) => (
        <li text="3.5 white" bg-primary px-2 rounded>
          {skill}
        </li>
      ))
    }
  </ul>
</ExpandableArticle>
